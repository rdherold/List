{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12420\viewh12440\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\partightenfactor0

\f0\fs36 \cf0 What is Interface Builder's object library?\
\
The object library is a library of items that are added to storyboards, including buttons, text fields, table views, switches, sliders, and so on.\
\
What is the difference between an outlet and an action?\
\
Outlets are references to storyboard user interface elements in the view controller; actions are functions trigger by certain events relating to those UI elements.\
\
What is the role of a View Controller?\
\
The view controller manages a portion of an app\'92s UI as well as interactions between that interface and underlying data.\
\
What is Model-View-Controller?\
\
Model-View-Controller coordinates the flow of information and interaction in an app; in other words, it passes data from one part of an app to another.\
\
Why use Model-View-Controller?\
\
Using Model-View-Controller results in concise, readable code that adheres to a strict structure. It also helps in instances when code might be passed to another developer\'97thanks to Mode-View-Controller, they\'92ll be able to easily interpret code in an app that they might be seeing for the first time. Model-View-Controller code is also modular, which enables it to be re-used.}